#include <ros/ros.h>
#include <pcl_ros/point_cloud.h>
#include <pcl/point_types.h>
#include <pcl_conversions/pcl_conversions.h>

typedef pcl::PointCloud<pcl::PointXYZ> PointCloud;

int main(int argc, char** argv)
{
  ros::init (argc, argv, "pub_pcl");
  ros::NodeHandle nh;
  ros::Publisher pub = nh.advertise<PointCloud> ("points2", 1);
  //ros::Rate r(5);
  PointCloud::Ptr msg (new PointCloud);
  msg->header.frame_id = "/my_frame";
  //int cloud_size = 1;
  msg->height = msg->width = 4 ;
  //msg->points.resize (msg->width * msg->width);
  msg->points.push_back (pcl::PointXYZ(2.0, 3.0, 0.0));
  
  ros::Rate loop_rate(5);
  while (nh.ok())
  {

    
    for (int i = 0; i< 3; i++){
	sleep(1);
       //msg->points.push_back (pcl::PointXYZ(1.0*i+1.0, 3.0, 1.0)); 
       pcl_conversions::toPCL(ros::Time::now(), msg->header.stamp);
       pub.publish (msg);
       //cloud_size++;

	ros::spinOnce ();
    	loop_rate.sleep ();
       }

    
  }
}
